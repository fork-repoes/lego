# 数据源配置
# 总共4个数据源
spring.shardingsphere.datasource.names=relation-ds0, relation-ds1, relation 
spring.shardingsphere.sharding.default-data-source-name=relation

# relation 数据源配置
spring.shardingsphere.datasource.relation.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.relation.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.relation.jdbc-url=jdbc:mysql://127.0.0.1:3306/relation?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.relation.username=root
spring.shardingsphere.datasource.relation.password=root

# relation-ds0 数据源配置
spring.shardingsphere.datasource.relation-ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.relation-ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.relation-ds0.jdbc-url=jdbc:mysql://127.0.0.1:3306/relation_0?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.relation-ds0.username=root
spring.shardingsphere.datasource.relation-ds0.password=root

# relation-ds1 数据源配置
spring.shardingsphere.datasource.relation-ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.relation-ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.relation-ds1.jdbc-url=jdbc:mysql://127.0.0.1:3306/relation_1?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.relation-ds1.username=root
spring.shardingsphere.datasource.relation-ds1.password=root


# 分库分表规则配置
# 使用雪花算法生成分布式主键id的值
spring.shardingsphere.sharding.default-key-generator.column=id
spring.shardingsphere.sharding.default-key-generator.column-type=BIGINT
spring.shardingsphere.sharding.default-key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.default-key-generator.algorithm-expression=SNOWFLAKE_HASH(id, 12)
spring.shardingsphere.sharding.default-key-generator.matrix-handling-type=SHARDING_DEFAULT


spring.shardingsphere.sharding.tables.relation.actual-data-nodes=relation-ds0.relation_$->{0..7},relation-ds1.relation_$->{8..15}
spring.shardingsphere.sharding.tables.relation.table-strategy.inline.sharding-column=owner_id
spring.shardingsphere.sharding.tables.relation.table-strategy.inline.algorithm-expression=relation_$->{Math.abs(owner_id.hashCode())  % 16}
spring.shardingsphere.sharding.tables.relation.database-strategy.inline.sharding-column=owner_id
spring.shardingsphere.sharding.tables.relation.database-strategy.inline.algorithm-expression=relation-ds$->{Math.floorDiv((Math.abs(owner_id.hashCode())  % 16) , 8)}



# 打印 SQL 配置（可选）
spring.shardingsphere.props.sql.show=true

